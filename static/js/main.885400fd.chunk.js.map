{"version":3,"sources":["App.styled.jsx","components/Buttons/Buttons.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["Container","styled","div","TitleStatics","StyleNoFeedback","p","Buttons","buttons","map","button","onClick","name","Statistics","data","Good","Neutral","Bad","total","Number","positive","toFixed","App","useState","setGood","setNeutral","setBad","allButtons","state","totalFeedbacks","positiveAverage","staticData","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAEaA,EAAYC,IAAOC,IAAV,2SAcTC,EAAeF,IAAOC,IAAV,iIAQZE,EAAkBH,IAAOI,EAAV,4C,OCvBfC,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,mCACGA,EAAQC,KAAI,SAACC,GACZ,OACE,wBAAwBC,QAASD,EAAO,GAAIE,KAAMF,EAAO,GAAzD,SACGA,EAAO,IADGA,EAAO,UCLjBG,EAAa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC3B,OACE,qCACE,sCACO,+BAAOA,EAAKC,UAEnB,yCACU,+BAAOD,EAAKE,aAEtB,qCACM,+BAAOF,EAAKG,SAElB,uCACQ,+BAAOH,EAAKI,WAEpB,mDAEE,iCAAOC,OAAOL,EAAKM,SAASC,WAA5B,eCwBOC,EArCH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KACMC,EAAa,CACjB,CAAC,OAAQ,kBAAMH,GAAQ,SAACI,GAAD,OAAWA,EAAQ,OAC1C,CAAC,UAAW,kBAAMH,GAAW,SAACG,GAAD,OAAWA,EAAQ,OAChD,CAAC,MAAO,kBAAMF,GAAO,SAACE,GAAD,OAAWA,EAAQ,QAGpCC,EAAiBd,EAAOC,EAAUC,EAClCa,EAAmBf,EAAOc,EAAkB,IAC5CE,EAAU,2BACX,CAAEhB,OAAMC,UAASC,QACjB,CAAEC,MAAOW,EAAgBT,SAAUU,IAGxC,OACE,eAAC7B,EAAD,WACE,uDACA,cAAC,EAAD,CAASO,QAASmB,IAClB,eAACvB,EAAD,wBAEsB,IAAnByB,EACC,cAAC,EAAD,CACEG,MAAOF,EACPZ,MAAOW,EACPf,KAAMiB,IAGR,cAAC1B,EAAD,uCC9BV4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.885400fd.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 35%;\r\n  margin: auto;\r\n  margin-top: 10px;\r\n  background-color: yellow;\r\n  border-radius: 20px;\r\n  box-shadow: 4px 3px 6px 4px rgba(155, 155, 155, 0.75);\r\n  padding: 40px;\r\n`;\r\n\r\nexport const TitleStatics = styled.div`\r\n  text-align: center;\r\n  margin-top: 10px;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyleNoFeedback = styled.p`\r\n  color: grey;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nexport const Buttons = ({ buttons }) => {\r\n  return (\r\n    <>\r\n      {buttons.map((button) => {\r\n        return (\r\n          <button key={button[0]} onClick={button[1]} name={button[0]}>\r\n            {button[0]}\r\n          </button>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nButtons.propTypes = {\r\n  buttons: PropTypes.array,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nexport const Statistics = ({ data }) => {\r\n  return (\r\n    <>\r\n      <p>\r\n        Good:<span>{data.Good}</span>\r\n      </p>\r\n      <p>\r\n        Neutral:<span>{data.Neutral}</span>\r\n      </p>\r\n      <p>\r\n        Bad:<span>{data.Bad}</span>\r\n      </p>\r\n      <p>\r\n        Total:<span>{data.total}</span>\r\n      </p>\r\n      <p>\r\n        Positive feedback:\r\n        <span>{Number(data.positive.toFixed())}% </span>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import { useState } from \"react\";\nimport { Container, StyleNoFeedback, TitleStatics } from \"./App.styled\";\nimport { Buttons } from \"./components/Buttons/Buttons\";\nimport { Statistics } from \"./components/Statistics/Statistics\";\n\nconst App = () => {\n  const [Good, setGood] = useState(0);\n  const [Neutral, setNeutral] = useState(0);\n  const [Bad, setBad] = useState(0);\n  const allButtons = [\n    [\"Good\", () => setGood((state) => state + 1)],\n    [\"Neutral\", () => setNeutral((state) => state + 1)],\n    [\"Bad\", () => setBad((state) => state + 1)],\n  ];\n\n  const totalFeedbacks = Good + Neutral + Bad;\n  const positiveAverage = (Good / totalFeedbacks) * 100;\n  const staticData = {\n    ...{ Good, Neutral, Bad },\n    ...{ total: totalFeedbacks, positive: positiveAverage },\n  };\n\n  return (\n    <Container>\n      <h1>Please leave feedback</h1>\n      <Buttons buttons={allButtons}></Buttons>\n      <TitleStatics>\n        Statistics\n        {totalFeedbacks !== 0 ? (\n          <Statistics\n            value={positiveAverage}\n            total={totalFeedbacks}\n            data={staticData}\n          ></Statistics>\n        ) : (\n          <StyleNoFeedback>No feedback given</StyleNoFeedback>\n        )}\n      </TitleStatics>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}